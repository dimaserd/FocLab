@using FocLab.Logic.Models.Tasks
@model ChemistryCreateTask
@{
    Layout = ChemistrySettings.LayoutPath;
    ViewBag.Title = "Создать задание";

    var fileMethodsSelectList = ViewData["fileMethodsSelectList"] as List<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>;

    var usersSelectList = ViewData["usersSelectList"] as List<Microsoft.AspNetCore.Mvc.Rendering.SelectListItem>;

    const string NotSelectedValue = "[Not_Selected]";

    var s = fileMethodsSelectList.FirstOrDefault(x => string.IsNullOrWhiteSpace(x.Value));

    s.Value = NotSelectedValue;
}

<div style="height:20px">

</div>

<div class="row">
    <div class="col-12">
        <a class="btn btn-success" href="/Chemistry/Tasks/Index" style="margin-top:10px">
            <i class="fas fa-globe"></i>
            Список заданий
        </a>
        |
        <a class="btn btn-success" href="/Chemistry/Methods/Index" style="margin-top:10px">
            <i class="fas fa-globe"></i>
            Список методов решений
        </a>
    </div>
</div>

<div style="height:20px">

</div>

    <div class="form-group m-form__group m--margin-top-10">
        <div class="alert m-alert m-alert--default" role="alert">
            Создание задачи для исполнителя
        </div>
    </div>

    @Html.HiddenFor(a => a.AdminId)


    <div class="form-group m-form__group">
        @Html.LabelFor(x => x.FileMethodId)
        @Html.DropDownList("FileMethodId", fileMethodsSelectList, new { id = "FileMethodsSelect", @class = "form-control" })
    </div>

    <div class="form-group m-form__group">
        @Html.LabelFor(x => x.Title)
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
    </div>

    <div class="form-group m-form__group">
        @Html.LabelFor(x => x.DeadLineDate)
        <input type="hidden" name="DeadLineDatePicker" />
        @Html.TextBoxFor(x => x.DeadLineDate, new { @class = "form-control" })
    </div>

    <div class="form-group m-form__group">
        @Html.LabelFor(x => x.PerformerId)
        @Html.DropDownListFor(x => x.PerformerId, usersSelectList, new { id = "PerformerSelect", @class = "form-control" })
    </div>

    <div class="form-group m-form__group">
        @Html.LabelFor(x => x.Quality)
        @Html.TextBoxFor(x => x.Quality, new { @class = "form-control" })
    </div>

    <div class="form-group m-form__group">
        @Html.LabelFor(x => x.Quantity)
        @Html.TextBoxFor(x => x.Quantity, new { @class = "form-control" })
    </div>


<div class="m-portlet__foot m-portlet__foot--fit">
    <div class="m-form__actions m-form__actions">
        <div class="row">
            <div class="col-lg-9">
                <button type="reset" class="btn btn-brand form-action-btn">Создать</button>
                <button type="reset" onclick="location.href='/Chemistry/Methods/Index'" class="btn btn-secondary">Отмена</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{
    <script>

        window["NotSelectedValue"] = "@NotSelectedValue";

    </script>
    <script src="~/src/Areas/Chemistry/Tasks/CreateTask/CreateTaskScripts.js"></script>
}