class AdminDayTaskCreator{constructor(n){this.AssigneeUserId=n.AssigneeUserId;this.TaskDate="";this.setHandlers();this.IsAjaxGoing=!1}setHandlers(){this.SetDate=function(n){const t=n.split(".");n=`${t[1]}.${t[0]}.${t[2]}`;this.TaskDate=n};this.ProccessData=function(n){return n.AssigneeUserId=this.AssigneeUserId,n.TaskDate=this.TaskDate,n};this.CreateDayTask=function(n){n=this.ProccessData(n);Requester.SendPostRequestWithAnimation("/Api/DayTask/Create",n,n=>{n.IsSucceeded&&dayTasksWorker.GetTasks()})};this.EditDayTask=function(n){Requester.SendPostRequestWithAnimation("/Api/DayTask/Update",n,n=>{n.IsSucceeded&&dayTasksWorker.GetTasks()})}}}class DayTaskDrawer{constructor(){this.setHandlers()}setHandlers(){this.DrawTasks=function(n,t){this.ClearTasks();for(let t=0;t<n.length;t++){const i=n[t];this.AddTaskToDate(i)}t&&this.AddAdminActions()};this.AddTaskToDate=function(n){const i=moment(n.TaskDate).format("DD.MM.YYYY");console.log(i);const t=document.querySelector(`[data-date='${i}']`);$(t).children(".no-tasks-text").remove();console.log(t,n);const r=document.createElement("div");r.innerHTML=`<a class="event d-block p-1 pl-2 pr-2 mb-1 rounded text-truncate small bg-primary text-white" onclick="ShowDayTaskModal('${n.Id}')" title="${n.TaskTitle}">
                                        ${n.TaskTitle}
                                        <span class="float-right" data-toggle="tooltip" data-placement="top" title="${n.AssigneeUser.Email}">
                                            ${ColorAvatarInitor.InitColorForAvatar(n)}
                                        </span>
                                   </a>`;t.appendChild(r)};this.AddAdminActions=function(){const n=document.getElementById("createTaskBtn");n.innerHTML="";const t=document.createElement("div");t.innerHTML=`<a class="btn float-right pl-2 pr-2 mb-1 rounded text-truncate bg-success text-white d-none d-lg-inline" onclick="ShowCreateTaskModal()">
                        <i class="fas fa-plus-circle fa-fw" style="font-size: 0.8rem;"></i> Создать задание
                    </a>
                    <a class="btn float-right pl-2 pr-2 mb-1 rounded text-truncate bg-success text-white  d-inline d-lg-none" onclick="ShowCreateTaskModal()">
                        <i class="fas fa-plus-circle fa-fw" style="font-size: 0.8rem;"></i> Создать
                    </a>`;n.appendChild(t)};this.ClearTasks=function(){const n=document.getElementsByClassName("event");while(n[0])n[0].parentNode.removeChild(n[0])}}}class DayTaskEditor{constructor(){this.setHandlers()}setHandlers(){this.UpdateHtmlProperties=function(n){ModalWorker.ShowModal("loadingModal");Requester.SendPostRequestWithAnimation("/Api/DayTask/Update",n,n=>{n.IsSucceeded&&dayTasksWorker.GetTasks()})}}}class DayTasksWorker{constructor(n){this.Tasks=n.Tasks;this.IsAdmin=n.IsAdmin;this.User=n.User;this.SearchModel=n.SearchModel;this.OpenTaskId=n.OpenTaskId;this.MyUserId=n.MyUserId;this.setHandlers();this.CurrentTaskId=null;this.CurrentTask=null;this.IsAjaxGoing=!1;this.Drawer=new DayTaskDrawer}setHandlers(){this.OpenTaskById=function(){var t=this.OpenTaskId;const n=this.Tasks.filter(n=>n.Id===t)[0];n!=null&&ShowDayTaskModal(n.Id)};this.SetCurrentTaskId=function(n){this.CurrentTaskId=n;this.CurrentTask=this.Tasks.filter(t=>t.Id===n)[0]};this.SendNotificationToAdmin=function(){ModalWorker.ShowModal("loadingModal");Requester.SendPostRequestWithAnimation("/Api/DayTask/SendToAdmin",{Id:this.CurrentTaskId})};this.GetTasks=function(){Requester.SendAjaxPost("/Api/DayTask/GetTasks",this.SearchModel,n=>{this.Tasks=n,this.Drawer.DrawTasks(this.Tasks,!0),this.OpenTaskById()})};this.GetTaskById=function(n){return this.Tasks.filter(function(t){return t.Id===n})[0]}}}class EditableComponents{constructor(){this.setHandlers();this.Editables=[]}setHandlers(){this.InitEditable=function(n,t,i=false){const r=Math.random().toString(36);n.style.display="none";n.setAttribute("data-editable-real-input",r);this.Editables.push({ElementId:r,Value:n.value,OnValueChangedHandler:t});const u=this.GetFakeElement(n,r,i);n.before(u);this.InitEditableInner(r);this.InitLiasoningOnChange(n,r)};this.InitLiasoningOnChange=function(n,t){n.addEventListener("change",function(){console.log("Обработчик реального измененного элемента");let n=t;const i=document.querySelectorAll(`[data-editable-input="${n}"]`)[0];i.value=this.value});const i=document.querySelectorAll(`[data-editable-input="${t}"]`)[0];i.addEventListener("change",function(){let n=t;const i=document.querySelectorAll(`[data-editable-real-input="${n}"]`)[0];i.value=this.value})};this.GetFakeElement=function(n,t,i){const r=document.createElement("div"),u=`<div class="form-group editable" data-editable-form="${t}">
        <div class="editable-backdrop" data-editable-backdrop="${t}"></div>
        ${this.GetFakeInputElement(n,t,i)}
        <div class="editable-buttons">
            <button class="btn btn-sm btn-editable" data-editable-check="${t}"><i class="fas fa-check"></i></button>
            <button class="btn btn-sm btn-editable" data-editable-cancel="${t}"><i class="fas fa-times"></i></button>
        </div>
        </div>`;return r.innerHTML=u,r};this.GetFakeInputElement=function(n,t,i){return i?`<textarea class="${n.className} editable-input" name="${n.id}" data-editable-input="${t}"
                    data-editable-input-id="${t}">${n.value}</textarea>`:`<input type="text" class="${n.className} editable-input" name="${n.id}" data-editable-input="${t}"
                    data-editable-input-id="${t}" value="${n.value}">`};this.InitEditableInner=function(n){const t=document.querySelectorAll(`[data-editable-input="${n}"]`)[0];t.onclick=this.OnInputClickHandler;const i=document.querySelectorAll(`[data-editable-check="${n}"]`)[0];i.addEventListener("click",function(){this.OnBtnCheckClickHandler(n)}.bind(this));const r=document.querySelectorAll(`[data-editable-cancel="${n}"]`)[0];r.addEventListener("click",function(){this.OnBtnCancelClickHandler(n)}.bind(this));const u=document.querySelectorAll(`[data-editable-backdrop="${n}"]`)[0];u.addEventListener("click",function(){this.BackDropClickHandler(n)}.bind(this))};this.CheckValueChanged=function(n){const r=document.querySelectorAll(`[data-editable-input="${n}"]`)[0],t=this.Editables.find(t=>t.ElementId===n),i=r.value;t.Value!==i&&(t.OnValueChangedHandler&&t.OnValueChangedHandler(i),t.Value=i,this.Editables=this.Editables.filter(t=>t.ElementId!==n),this.Editables.push(t))};this.BackDropClickHandler=function(n){const t=document.querySelectorAll(`[data-editable-form="${n}"]`)[0];t.classList.remove("editable--active");const i=document.querySelectorAll(`[data-editable-input="${n}"]`)[0];i.removeAttribute("editable");this.CheckValueChanged(n)};this.OnInputClickHandler=function(){const n=this.getAttribute("data-editable-input-id"),t=document.querySelectorAll(`[data-editable-input="${n}"]`)[0];t.setAttribute("editable","editable");const i=document.querySelectorAll(`[data-editable-form="${n}"]`)[0];i.classList.add("editable--active")};this.OnBtnCheckClickHandler=function(n){const t=document.querySelectorAll(`[data-editable-input="${n}"]`)[0];t.removeAttribute("editable");const i=document.querySelectorAll(`[data-editable-form="${n}"]`)[0];i.classList.remove("editable--active");this.CheckValueChanged(n)};this.OnBtnCancelClickHandler=function(n){const t=document.querySelectorAll(`[data-editable-input="${n}"]`)[0];t.removeAttribute("editable");const i=document.querySelectorAll(`[data-editable-form="${n}"]`)[0];i.classList.remove("editable--active");const r=this.Editables.find(t=>t.ElementId===n);t.value=r.Value}}}const editableComponents=new EditableComponents;class EditDayTaskModalWorker{constructor(){this.setHandlers()}setHandlers(){}}class ScheduleWorker{constructor(n){this.filter=n;this.setHandlers();this.SetUsersSelect();this.Users=[]}setHandlers(){this.SetUsersSelect=function(){Requester.SendAjaxPost("/Api/User/Get",{Count:null,OffSet:0},(n=>{console.log("/Api/User/Get",n),this.Users=n.List,$(".usersSelect").select2({placeholder:"Выберите пользователя",language:{noResults:function(){return"Пользователь не найден."}},data:n.List.map(n=>({id:n.Id,text:`${n.Name} ${n.Email}`,avatarId:n.AvatarFileId})),templateSelection:formatStateSelection,templateResult:formatStateResult,escapeMarkup:function(n){return n}}),FormDataHelper.FillDataByPrefix("filter.",{UserIds:this.filter.UserIds}),$("#usersSelect").val(this.filter.UserIds).trigger("change.select2"),$(".select2-selection__rendered img").addClass("m--img-rounded m--marginless m--img-centered")}).bind(this))}}}