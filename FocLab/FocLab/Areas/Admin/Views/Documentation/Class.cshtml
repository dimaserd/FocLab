@model Croco.Core.Logic.Models.Documentation.CrocoTypeDescription
@{
    ViewBag.Title = "Документация по классу";
    Layout = ChemistrySettings.LayoutPath;
}

    <div class="input-group mb-3">
        <input id="newModelInput" class="form-control m-input" placeholder="Найти другую модель..">
        
        <button class="btn btn-outline-success w-25" onclick="SearchModelApply()">Найти</button>
    </div>

<h2>Описание модели @Model.TypeName</h2>

<p>
    Тип модели: @Model.FullTypeName
</p>

<div class="row">
    <div class="col-12">
        <textarea style="width: 500px;">@Model.JsonExample</textarea>
    </div>

</div>

<div style="height:20px">

</div>

<div class="row">
    <div class="col-md-12">
        <a href="/Admin/Documentation/CodeGen?type=@Model.FullTypeName" class="btn btn-success">
            CodeGen
        </a>
    </div>
</div>

@if (Model.IsEnumeration)
{
    <h4>
        Значения перечисления @Model.TypeName
    </h4>

    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <tr>
                <th>
                    <strong>
                        Значение как строка
                    </strong>
                    
                </th>
                <th>
                    <strong>
                        Значение как число
                    </strong>
                    
                </th>
                <th>
                    <strong>
                        Описание
                    </strong>
                </th>
            </tr>

            @foreach (var enumDescription in Model.EnumValues)
            {
                <tr>
                    <td>
                        @enumDescription.StringRepresentation
                    </td>
                    
                    <td>
                        @enumDescription.IntRepresentation
                    </td>
                    <td>
                        @enumDescription.Description
                    </td>

                </tr>

            }

        </table>
    </div>
}

@if (Model.Properties.Count > 0)
{
    <div class="table-responsive">
        <table class="table table-bordered table-hover">
            <tr>
                <th>
                    <strong>
                        Название свойства
                    </strong>

                </th>
                <th>
                    <strong>
                        Тип
                    </strong>
                </th>
                <th>
                    <strong>
                        Необязательный (CanBeNull)
                    </strong>
                </th>
                <th>
                    <strong>
                        Описания
                    </strong>
                </th>
            </tr>

            @foreach (var prop in Model.Properties)
            {
                <tr>
                    <td>
                        @prop.PropertyName
                    </td>
                    
                    @if (prop.IsEnumerable)
                    {
                        <td>
                            <a href="/Admin/Documentation/Class?typeName=@prop.EnumeratedType.FullTypeName">@prop.TypeDisplayName</a>
                        </td>
                    }
                    else
                    {
                        <td>
                            <a href="/Admin/Documentation/Class?typeName=@prop.FullTypeName">@prop.TypeDisplayName</a>
                        </td>
                    }

                    
                    
                    <td>
                        @prop.IsNullable
                    </td>
                    <td>

                        <table class="table table-bordered table-hover">
                            <tbody>
                                @foreach (var description in prop.Descriptions)
                                {
                                    <tr>
                                        <td>
                                            @description
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>

                    </td>

                </tr>

            }

        </table>
    </div>
}
<script>
    const SearchModelApply = () => {
        console.log(this);
        const modelName = document.getElementById("newModelInput").value;
        location.href = `Class?typeName=${modelName}`;
    }
</script>