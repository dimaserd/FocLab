@using FocLab.Logic.EntityDtos.Users.Default
@model List<FocLab.Logic.Models.Tasks.ChemistryTaskModel>
@{
    Layout = null;

    var dateNow = DateTime.Now;

    var user = ViewData["User"] as ApplicationUserDto;

    var isEmailSet = user != null;

    var tasks = isEmailSet ? Model.Where(x => x.PerformerUser.Id == user.Id).ToList() : Model;

    var sortSelect = new List<SelectListItem>
    {
        new SelectListItem
        {
        Text = "Не сортировать",
        Value = "0"
        },

        new SelectListItem
        {
        Text = "По дате выполнения",
        Value = "1",
        },

        new SelectListItem
        {
        Text = "По имени исполнителя",
        Value = "2",
        },

    };

    var usersSelectList = ViewData["usersSelectList"] as List<SelectListItem>;

    var tasksSelectList = ViewData["tasksSelectList"] as List<SelectListItem>;
}

<style>
    .btn-margin {
        margin-top: 5px;
        margin-bottom: 5px;
    }
</style>


<div class="row">
    <div class="col-md-12"> 
        <a href="/Chemistry/Tasks/CreateTask" class="btn btn-primary btn-margin">
            <i class="fa fa-plus-circle"></i>
            Создать задание
        </a>

        
    </div>
</div>

<div style="height:30px">

</div>

<div class="table-responsive">
    <table class="table table-bordered">

        <tr>
            <th>
                Искать по названию
            </th>

            <th>
                @Html.DropDownList("SearchTasks.Q", tasksSelectList, new { id = "SearchTasks", @class = "form-control" })
            </th>
        </tr>


        <tr>
            <th>
                Сортировать по
            </th>

            <th>
                @Html.DropDownList("sort", sortSelect, new { @class = "form-control selectpicker" })
            </th>
        </tr>

        <tr>
            <th colspan="2">
                <button onclick="tasksFilter.ApplyFilter()" class="btn btn-success btn-block">
                    <i class="fa fa-search"></i>
                    <strong>
                        Поиск
                    </strong>
                </button>
            </th>
        </tr>
    </table>
</div>

@{
    var text = !isEmailSet ? "Список заданий которые выполнили исполнители" : $"Список заданий которые выполнил исполнитель {user.Email}";
}
<div class="row">

    <div class="col-md-12">
        <h2 class="text-center">
            @text <span class="m-menu__link-badge">
                      <span class="m-badge m-badge--success">@tasks.Count(x => x.IsPerformed)</span>
                  </span> 
        </h2>

        <h2>
            <span class="pull-right btn" onclick="$('#performedBody').fadeToggle()">[Показать/Скрыть]</span>
        </h2>
    </div>

</div>



<div class="table-responsive" id="performedBody">
    <table class="table table-hover table-bordered">
        <thead>
            <tr>
                <th>
                    <strong>Название</strong>
                </th>

                <th>
                    <strong>Исполнитель</strong>
                </th>

                <th>
                    <strong>Крайний срок</strong>
                </th>

                <th>
                    <strong>Дата выполнения</strong>
                </th>

                <th>
                    <strong>Количество</strong>
                </th>

                <th>
                    <strong>Факт. колличество</strong>
                </th>

                <th>
                    <strong>Качество</strong>
                </th>

                <th>
                    <strong>Факт. качество</strong>
                </th>
            </tr>
        </thead>

        <tbody id="performed-tbody">
            @foreach (var task in tasks.Where(x => x.IsPerformed))
            {
                var _class = task.IsPerformedInTime ? "success" : "danger";

                <tr id="@task.Id" class="@_class performed-chemistry-task">

                    <td>
                        <a href="@task.GetDetailsPageLink()">
                            @task.Title
                        </a>
                    </td>

                    <td>
                        <a href="/Chemistry/Tasks/Index?id=@task.PerformerUser.Id">
                            @task.PerformerUser.Name @task.PerformerUser.Email
                        </a>
                    </td>

                    <td>
                        @task.DeadLineDate
                    </td>

                    <td>
                        @task.PerformedDate.Value
                    </td>

                    <td>
                        @task.AdminQuantity
                    </td>

                    <td>
                        @task.PerformerQuantity
                    </td>

                    <td>
                        @task.AdminQuality
                    </td>

                    <td>
                        @task.PerformerQuality
                    </td>

                </tr>
            }

            @if (tasks.Count(x => x.IsPerformed) == 0)
            {
                <tr>
                    <td colspan="8">
                        <span class="h4 text-center">
                            Пока выполненных заданий нет
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@{
    var otherText = !isEmailSet ? "Список заданий которые не выполнили исполнители" : $"Список заданий которые не выполнил исполнитель {user.Email}";
}

<div class="row">
    <div class="col-md-12">
        <h2 class="text-center">
            @otherText <span class="m-menu__link-badge">
                           <span class="m-badge m-badge--success">@tasks.Count(x => !x.IsPerformed)</span>
                        </span>  
        </h2>

        <h2>
            <span class="pull-right btn" onclick="$('#notPerformedBody').fadeToggle()">[Показать/Скрыть]</span>
        </h2>
    </div>

</div>



<div class="table-responsive" id="notPerformedBody">
    <table class="table table-bordered table-hover">
        <thead>
            <tr>
                <th>
                    <strong>Название</strong>
                </th>

                <th>
                    <strong>Исполнитель</strong>
                </th>

                <th>
                    <strong>Крайний срок</strong>
                </th>

                <th>
                    <strong>Метод решения</strong>
                </th>

                <th>
                    <strong>Количество</strong>
                </th>

                <th>
                    <strong>Качество</strong>
                </th>
            </tr>
        </thead>

        <tbody id="not-performed-body">
            @foreach (var task in tasks.Where(x => !x.IsPerformed))
            {
                var _class = task.DeadLineDate > dateNow ? "success" : "danger";

                <tr class="@_class">

                    <td>
                        @if (!string.IsNullOrEmpty(task.Title))
                        {
                            <a href="@task.GetDetailsPageLink()">
                                @task.Title
                            </a>
                        }
                        else
                        {
                            <a href="@task.GetDetailsPageLink()">
                                [Название не указано]
                            </a>
                        }

                    </td>

                    <td>
                        @if (task.PerformerUser != null)
                        {
                            <a href="/Chemistry/Tasks/Index?id=@task.PerformerUser.Id">
                                @task.PerformerUser.Name @task.PerformerUser.Email
                            </a>
                        }
                        else
                        {
                            <a>[Исполнитель не указан]</a>
                        }

                    </td>

                    <td>
                        @task.DeadLineDate
                    </td>

                    <td>
                        @if (task.ChemistryMethodFile != null)
                        {

                            <a href="@task.ChemistryMethodFile.GetLinkToFile()" class="btn btn-primary">
                                @task.ChemistryMethodFile.Name
                            </a>
                        }
                        else
                        {
                            @Html.Raw("[Метод не указан]")
                        }
                    </td>

                    <td>
                        @task.AdminQuality
                    </td>

                    <td>
                        @task.AdminQuantity
                    </td>

                </tr>
            }

            @if (tasks.Count(x => !x.IsPerformed) == 0)
            {
                <tr>
                    <td colspan="6">
                        <span class="h4 text-center">
                            Пока не выполненных заданий нет
                        </span>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<script>
    document.addEventListener("DOMContentLoaded", function () {

        $("#User").select2({
            placeholder: "Выберите пользователя",

            "language": {
                "noResults": function() {
                    return "Пользователь не найден.";
                }
            },
            escapeMarkup: function(markup) {
                return markup;
            }
        });

        $("#SearchTasks").select2({
            placeholder: "Введите название",

            "language": {
                "noResults": function() {
                    return "Задание не найдено.";
                }
            },
            escapeMarkup: function(markup) {
                return markup;
            }
        });
    })
    
    var taskDrawer = new TaskDrawer();
</script>

<script>
        
</script>

<script>
    var tasks = @Html.GetJson(tasks);

    console.log(tasks);

    var tasksFilter = new TasksFilter();

    tasksFilter.SetTasks(tasks);

</script>