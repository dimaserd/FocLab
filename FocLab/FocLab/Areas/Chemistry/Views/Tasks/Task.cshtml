@model FocLab.Logic.Models.Tasks.ChemistryTaskModel
@{
    Layout = ChemistrySettings.LayoutPath;
    ViewBag.Title = "Задание";

    var types = new[]
    {
        ChemistryTaskDbFileType.File1,
        ChemistryTaskDbFileType.File2,
        ChemistryTaskDbFileType.File3,
        ChemistryTaskDbFileType.File4
    };

    var isNotAdmin = !User.HasRight(UserRight.Admin) && !User.HasRight(UserRight.SuperAdmin);

    var userId = User.Identity.GetUserId();

    const string viewsChemistry = "~/Areas/Chemistry/Views/Tasks";

    int ToInt(ChemistryTaskDbFileType @enum)
    {
        return (int)@enum;
    }
}

@await Html.PartialAsync($"{viewsChemistry}/Scripts/SubstanceScripts.cshtml")

<div style="height:20px">

</div>

<div class="row">
    <div class="col-md-12">

        <a href="/Chemistry/Chemistry" class="btn btn-primary" style="margin-top:5px">
            <i class="fa fa-list"></i>
            Список задач
        </a>

        <a href="/Chemistry/Experiments/Create/@Model.Id" class="btn btn-success" style="margin-top:5px">
            <i class="fa fa-plus-circle"></i>
            Создать эксперимент
        </a>

        @if (User.IsAdmin())
        {
            <a href="/Chemistry/Tasks/EditTask/@Model.Id" class="btn btn-warning" style="margin-top:5px">
                <i class="fa fa-pencil-square"></i>
                Редактировать
            </a>

            if (!Model.Deleted)
            {
                <a onclick="RemoveTask('@Model.Id')" class="btn btn-danger" style="margin-top:5px">
                    <i class="fa fa-trash-o"></i>
                    Удалить
                </a>
            }

            if (Model.Deleted)
            {
                <a onclick="CancelRemoving('@Model.Id')" class="btn btn-success" style="margin-top:5px">
                    Отменить удаление
                </a>
            }


        }


        <a href="/Chemistry/Tasks/PrintTask/@Model.Id" class="btn btn-success" style="margin-top:5px">
            <i class="fa fa-print" aria-hidden="true"></i>
            Печать документа
        </a>

    </div>
</div>

<hr />

<h3>
    Задание <strong>@Model.Title</strong>
</h3>

<div style="height:20px">

</div>

<h4>
    <strong>
        Файлы для решения
    </strong>
</h4>

<div class="row">
    <div class="col-md-12">

        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <thead>
                    <tr>
                        <th>
                            <strong>Статус файла</strong>
                            
                        </th>

                        @if (isNotAdmin)
                        {
                            <th>
                                <strong>Загрузка файла</strong>
                                
                            </th>
                        }


                        <th>
                            <strong>Действия</strong>
                            
                        </th>
                    </tr>
                </thead>

                <tbody>
                    @foreach (var type in types)
                    {
                        var file = Model.Files.FirstOrDefault(x => x.Type == type);

                        <tr>
                            <td>
                                @if (file == null)
                                {
                                    <strong>
                                        <span class="text-danger">@type.ToDisplayName() не загружен</span>
                                    </strong>
                                }
                                else
                                {
                                    <strong>
                                        <span class="text-success">@type.ToDisplayName() уже загружен</span>
                                    </strong>
                                }


                            </td>

                            @if (isNotAdmin)
                            {
                                <td>

                                    <input id="@type" type="file" name="@type" />
                                </td>
                            }


                            <td>
                                <div class="row">


                                    @if (file == null && isNotAdmin)
                                    {
                                        <div class="col-md-12">
                                            <button class="btn btn-success btn-block" onclick="UpdateFileByType('@ToInt(type)')">
                                                Загрузить файл
                                            </button>
                                        </div>
                                    }
                                    else if (isNotAdmin)
                                    {
                                        <div class="col-md-12">
                                            <button class="btn btn-success btn-block" onclick="UpdateFileByType('@ToInt(type)')">
                                                Обновить файл
                                            </button>
                                        </div>
                                    }



                                    @if (file != null)
                                    {
                                        <div class="col-md-12" style="margin-top:10px">
                                            <a class="btn btn-primary btn-block" href="/Files/GetDbFileById/@file.FileId">
                                                Скачать файл
                                            </a>
                                        </div>
                                    }

                                </div>

                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>



    </div>

</div>


<div class="row">
    <div class="col-md-12">
        <div class="table-responsive">
            <table class="table table-bordered table-striped">
                <tbody>
                    <tr>
                        <th>
                            <strong>Уст. качество</strong>
                        </th>

                        <th>
                            <strong>Получ. качество</strong>
                            
                        </th>
                    </tr>

                    <tr>
                        <td>
                            @Model.AdminQuality
                        </td>

                        <td>
                            @Html.TextBox( "Quality", Model.PerformerQuality, new { @class = "form-control" })
                        </td>
                    </tr>

                    <tr>
                        <th>
                            <strong>Уст. количество</strong>
                        </th>

                        <th>
                            <strong>Получ. количество</strong>
                            
                        </th>
                    </tr>

                    <tr>
                        <td>
                            @Model.AdminQuantity
                        </td>

                        <td>
                            @Html.TextBox( "Quantity", value: Model.PerformerQuantity, htmlAttributes: new { @class = "form-control" })
                        </td>
                    </tr>

                </tbody>
            </table>
        </div>
    </div>
</div>

@await Html.PartialAsync($"{viewsChemistry}/Partials/TaskExperiments.cshtml", model: Model.Experiments)



<div class="table-responsive">
    <table class="table table-bordered table-striped">
        <tbody>

            <tr>
                <th colspan="2" class="text-center">
                    Изображение реакции
                </th>
            </tr>

            @if (Model.ReactionSchemaImage.FileId > 0)
            {
                <tr>
                    <th colspan="2">
                        <img class="img-responsive img-fluid" src="/Files/GetDbFileById?id=@Model.ReactionSchemaImage.FileId&type=Medium" />
                    </th>
                </tr>

            }
            @{
                var btnText = Model.ReactionSchemaImage.FileId > 0 ? "Перезагрузить файл реакции" : "Загрузить файл реакции";
            }
            <tr>
                <th>
                    @if (!User.HasRight(UserRight.Admin) && !User.HasRight(UserRight.SuperAdmin))
                    {
                        <input type="file" accept="image/*" id="0" />
                    }
                </th>

                <th>
                    <button class="btn btn-success" onclick="UpdateFileByType('0')">
                        @btnText
                    </button>

                    @if (Model.ReactionSchemaImage.FileId > 0)
                    {
                        <a class="btn btn-primary" href="/Files/GetDbFileById/@Model.ReactionSchemaImage.FileId">
                            Скачать изображение реакции
                        </a>
                    }

                </th>
            </tr>


        </tbody>

    </table>
</div>


@await Html.PartialAsync($"{viewsChemistry}/Table.cshtml", model: Model.SubstanceCounter)


<div style="height:20px">

</div>

<div class="table-responsive">
    <table class="table table-bordered table-striped">
        <tr>
            <th colspan="2" class="">Текст выполнения</th>
        </tr>

        <tr>
            <td colspan="2">
                @Html.TextArea( "Text", Model.PerformerText, new { @class = "form-control", style = "height:150px" })
            </td>
        </tr>

        @if (isNotAdmin && userId == Model.PerformerUser.UserId || User.HasRight(UserRight.Root))
        {
            <tr>
                <td colspan="2">
                    <div class="btn btn-success btn-block" onclick="UpdateBtnClickHandler()">
                        <strong>
                            Обновить данные
                        </strong>
                    </div>
                </td>
            </tr>
        }
    </table>
</div>

<div style="height:20px">

</div>

@await Html.PartialAsync($"{viewsChemistry}/Partials/TaskReagents.cshtml")


@section Scripts{

    <!--Методы удаления и восстановления-->
    <script>
        function RemoveTask(id) {

            console.log("RemoveTask", id);

            var data = { Id: id, Flag: false };
            
            $.ajax({
                url: '/Chemistry/Chemistry/RemoveOrCancelRemoving',
                type: 'POST',
                data: data,
                async: true,
                cache: false,
                dataType: 'json',
                success: function (response) {
                    alert(response.Message);

                    location.reload();
                }
            });
        }

        function CancelRemoving(id) {

            var data = { Id: id, Flag: true };

            $.ajax({
                url: '/Chemistry/Chemistry/RemoveOrCancelRemoving',
                type: 'POST',
                data: data,
                async: true,
                cache: false,
                dataType: 'json',
                success: function (response) {
                    alert(response.Message);

                    location.reload();
                }
            });
        }
    </script>
    <!--Методы удаления и восстановления-->
    <!--Методы загрузки файлов-->
    <script>



    function UpdateFileByType(fileType) {

        UploadUserFile(fileType);
    }

    function UploadUserFile(fileType) {
        var file_data = $('#' + fileType).prop('files');

        if (file_data == null || file_data.length == 0) {
            alert("Файл для загрузки не выбран")
            return;
        }

        var form_data = new FormData();

        for (var i = 0; i < file_data.length; i++) {
            form_data.append('File', file_data[i]);
        }

        form_data.append("TaskId", '@Model.Id');
        form_data.append("TaskFile.FileType", fileType);
        form_data.append("TaskFile.Description", "");

        console.log("UploadUserFile", form_data);

        $.ajax({
            url: '/Chemistry/Chemistry/UploadTaskFile',
            type: 'POST',
            data: form_data,
            async: true,
            cache: false,
            dataType: 'json',
            contentType: false,
            processData: false,
            success: function (response) {

                console.log("UploadUserFile", response);

                alert(response.Message);

                if (response.IsSucceeded) {
                    location.reload();
                }
            }
        });
    }
    </script>
    <!--/Методы загрузки файлов-->


    <script>


        function UpdateBtnClickHandler() {

            modalWorker.ShowModal("loadingModal");

            var data = {
                Id: "@Model.Id",
                PerformerQuality: document.getElementsByName("Quality")[0].value,
                PerformerQuantity: document.getElementsByName("Quantity")[0].value,
                PerformerText: document.getElementsByName("Text")[0].value,
                SubstanceCounterJSON: JSON.stringify(substance.getJSON()),
            };

            $.ajax({
                url: '/Chemistry/Chemistry/UpdateTaskByPerformer',
                type: 'POST',
                data: data,
                async: true,
                cache: false,
                dataType: 'json',
                success: function (response) {

                    modalWorker.HideModals();

                    alert(response.Message);

                    location.reload();
                }
            });
        }

        $("#Create.ReagentId").select2({
            placeholder: "Выберите реагент",

            "language": {
                "noResults": function () {
                    return "Реагент не найден.";
                }
            },
            escapeMarkup: function (markup) {
                return markup;
            }
        })
    </script>

}