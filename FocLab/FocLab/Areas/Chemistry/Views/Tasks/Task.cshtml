@using FocLab.ViewModels
@model FocLab.Logic.Models.Tasks.ChemistryTaskModel
@{
    Layout = ChemistrySettings.LayoutPath;
    ViewBag.Title = "Задание";

    var isNotAdmin = !User.HasRight(UserRight.Admin) && !User.HasRight(UserRight.SuperAdmin);

    var userId = User.Identity.GetUserId();

    const string viewsChemistry = "~/Areas/Chemistry/Views/Tasks";
}

<div style="height:20px">

</div>

<div class="row">
    <div class="col-md-12">

        <a href="/Chemistry/Tasks/Index" class="btn btn-primary" style="margin-top:5px">
            <i class="fa fa-list"></i>
            Список задач
        </a>

        <a href="/Chemistry/Experiments/Create/@Model.Id" class="btn btn-success" style="margin-top:5px">
            <i class="fa fa-plus-circle"></i>
            Создать эксперимент
        </a>

        @if (User.IsAdmin())
        {
            <a href="/Chemistry/Tasks/EditTask/@Model.Id" class="btn btn-warning" style="margin-top:5px">
                <i class="fa fa-pencil-square"></i>
                Редактировать
            </a>

            if (!Model.Deleted)
            {
                <a onclick="RemoveTask('@Model.Id')" href="#delete" class="btn btn-danger" style="margin-top:5px">
                    <i class="fas fa-trash"></i>
                    Удалить
                </a>
            }

            if (Model.Deleted)
            {
                <a onclick="CancelRemoving('@Model.Id')" class="btn btn-success" style="margin-top:5px">
                    Отменить удаление
                </a>
            }
        }


        <a  href="/Chemistry/Tasks/Print/@Model.Id" class="btn btn-success" style="margin-top:5px">
            <i class="fa fa-print" aria-hidden="true"></i>
            Печать документа
        </a>

    </div>
</div>

<hr />

<div class="form-group m-form__group m--margin-top-10">
    <div class="alert m-alert m-alert--default" role="alert">
        <h5>
            Задание <strong>@Model.Title</strong>
        </h5>
    </div>
</div>


@await Html.PartialAsync("~/Areas/Chemistry/Views/Tasks/Partials/ReactionMainImage.cshtml", RenderReactionMainSchemaImageViewModel.Create(Model))

<div style="height:20px">

</div>

@await Html.PartialAsync("~/Areas/Chemistry/Views/Tasks/Partials/TaskFiles.cshtml", RenderTaskFilesViewModel.Create(Model, !isNotAdmin))


<div class="row">
    <div class="col-md-12">
        <div class="table-responsive">
            <table class="table table-hover">
                <tbody>
                    <tr>
                        <th>
                            <strong>Уст. качество</strong>
                        </th>

                        <th>
                            <strong>Получ. качество</strong>
                        </th>
                    </tr>

                    <tr>
                        <td>
                            @Model.AdminQuality
                        </td>

                        <td>
                            @Html.TextBox("Quality", Model.PerformerQuality, new { @class = "form-control" })
                        </td>
                    </tr>

                    <tr>
                        <th>
                            <strong>Уст. количество</strong>
                        </th>

                        <th>
                            <strong>Получ. количество</strong>
                        </th>
                    </tr>

                    <tr>
                        <td>
                            @Model.AdminQuantity
                        </td>

                        <td>
                            @Html.TextBox("Quantity", value: Model.PerformerQuantity, htmlAttributes: new { @class = "form-control" })
                        </td>
                    </tr>

                </tbody>
            </table>
        </div>
    </div>
</div>

@await Html.PartialAsync($"{viewsChemistry}/Partials/TaskExperiments.cshtml", model: Model.Experiments)




@await Html.PartialAsync($"{viewsChemistry}/Table.cshtml", model: Model.SubstanceCounter)


<div style="height:20px">

</div>


<div style="height:20px">

</div>

@await Html.PartialAsync($"{viewsChemistry}/Partials/TaskReagents.cshtml")


<div>
    <div class="form-group m-form__group row">
        <label class="col-xl-12 col-lg-12 col-form-label">
            <strong>
                Текст выполнения
            </strong>
        </label>
        <div class="col-xl-12 col-lg-12">
            @Html.TextArea("Text", Model.PerformerText, htmlAttributes: new { @class = "form-control m-input", style = "height:150px", rows = "3" })
        </div>
    </div>
</div>

<div class="m-portlet__foot m-portlet__foot--fit">
    <div class="m-form__actions m-form__actions">
        <div class="row">
            <div class="col-lg-9">
                @if (userId == Model.PerformerUser.Id)
                {

                    <button type="reset" class="btn btn-brand form-action-btn btn-task-update">Обновить</button>
                }
                <button type="reset" onclick="location.href='/Chemistry/Experiments/Index'" class="btn btn-secondary">Отмена</button>
            </div>
        </div>
    </div>
</div>




@section Scripts{

    <script src="~/js/Task.js"></script>
    <script src="~/js/Substance.js"></script>

    <script>
        var substanceObject = @Html.GetJson(Model.SubstanceCounter);

        SubstanceStaticHandlers.substance = new SubstanceCounter(substanceObject);
        TaskStaticHandlers.TaskId = "@(Model.Id)";

        $("#Create_ReagentId").select2({
            placeholder: "Выберите реагент",

            "language": {
                "noResults": function () {
                    return "Реагент не найден.";
                }
            },
            escapeMarkup: function (markup) {
                return markup;
            }
        })
    </script>




    <script>
        $(".btn-task-update").on("click", () => TaskStaticHandlers.UpdateBtnClickHandler());
    </script>

    <script>

        function UpdateFileByType(fileType) {

            TaskStaticHandlers.UpdateFileByType(fileType);
        }

    </script>
    <!--/Методы загрузки файлов-->
}