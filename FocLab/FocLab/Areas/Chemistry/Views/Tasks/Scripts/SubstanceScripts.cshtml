
@{
    Layout = null;
}

<script>

    class Substance {

        constructor(name, massa, molarMassa, koef) {
            this.Name = name;
            this.Massa = massa;
            this.MolarMassa = molarMassa;
            this.Koef = koef;
        }
    }

    class SubstanceCounter {

        constructor(substanceObj) {

            this.prefix = "";
            //this.setProperties();
            this.Substances = [];

            if (substanceObj != null && substanceObj != undefined) {
                this.Etalon = substanceObj.Etalon;
                this.Substances = substanceObj.Substances;

            }
            this.setDrawingHandlers();

            this.DrawTable();

        }

        setDrawingHandlers() {

            this.ClearTable = function () {
                document.getElementById(`${this.prefix}.tbodySubstances`).innerHTML = "";
            }

            this.DrawEtalon = function () {
                var tr = document.createElement("tr");

                var html = `
                <td>
                    <input class="form-control" name="${this.prefix}.etalon.Name" onchange="EtalonChangedHandler('${this.prefix}')" oninput="EtalonChangedHandler('${this.prefix}')" type="text" value="">
                </td>

                <td>
                    <input class="form-control" name="${this.prefix}.etalon.Massa" onchange="EtalonChangedHandler('${this.prefix}')" oninput="EtalonChangedHandler('${this.prefix}')" type="number" value="">
                </td>

                <td>
                    <input class="form-control" name="${this.prefix}.etalon.MolarMassa" onchange="EtalonChangedHandler('${this.prefix}')" oninput="EtalonChangedHandler('${this.prefix}')" type="number" value="">
                </td>

                <td>
                    <input class="form-control" name="${this.prefix}.etalon.Koef" onchange="EtalonChangedHandler('${this.prefix}')" oninput="EtalonChangedHandler('${this.prefix}')" type="number" value="">
                </td>

                <td>

                </td>`;

                tr.innerHTML = html;

                document.getElementById(`${this.prefix}.tbodySubstances`).appendChild(tr);
            }

            this.DrawSubstance = function (count) {
                var tr = document.createElement("tr");

                var html =
                    `
                    <td>
                        <input class="form-control" name="${this.prefix}.Name[${count}]" onchange="ChangeName(${count}, this.value)" type="text" value="">
                    </td>

                    <td>
                        <input class="form-control" name="${this.prefix}.Massa[${count}]" onchange="WriteMassa(this.value, ${count}, '${this.prefix}')" type="number" value="">
                    </td>

                    <td>
                        <input class="form-control" onchange="ChangeMassa(${count}, '${this.prefix}')" oninput="ChangeMassa(${count}, '${this.prefix}')" name="${this.prefix}.MolarMassa[${count}]" type="number" value="">
                    </td>

                    <td>
                        <input class="form-control" onchange="ChangeMassa(${count}, '${this.prefix}')" oninput="ChangeMassa(${count}, '${this.prefix}')" name="${this.prefix}.Koef[${count}]" type="number" value="">
                    </td>

                    <td>
                        <button class="btn btn-danger" onclick="RemoveSubstanceHandler(${count}, '${this.prefix}')">
                            <i class="fa fa-remove">

                            </i>
                        </button>
                    </td>`;


                tr.innerHTML = html;

                document.getElementById(`${this.prefix}.tbodySubstances`).appendChild(tr);
            }

            this.DrawTable = function () {
                if (this.Etalon == null) {
                    alert("Не указано эталонное вещество");
                    this.Etalon = new Substance("", 1, 1, 1);
                }
                this.DrawEtalon();

                this.setValueToName(`${this.prefix}.etalon.Name`, this.Etalon.Name);
                this.setValueToName(`${this.prefix}.etalon.Massa`, this.Etalon.Massa);
                this.setValueToName(`${this.prefix}.etalon.MolarMassa`, this.Etalon.MolarMassa);
                this.setValueToName(`${this.prefix}.etalon.Koef`, this.Etalon.Koef);


                for (var i = 0; i < this.Substances.length; i++) {
                    this.DrawSubstance(i);
                    this.setValuesToSubstance(i);
                }
            }
        }

        

        AddSubstance() {

            var count = substance.Substances.length;

            this.DrawSubstance(count);

            this.Substances.push(new Substance());
        }

        RecalcSubstances() {

            for (var i = 0; i < this.Substances.length; i++) {
                ChangeMassa(i, this.prefix);
            }
        }

        setValuesToSubstance(count) {
            this.setValueToName(`${this.prefix}.Name[${count}]`, this.Substances[count].Name);
            this.setValueToName(`${this.prefix}.Massa[${count}]`, this.Substances[count].Massa);
            this.setValueToName(`${this.prefix}.MolarMassa[${count}]`, this.Substances[count].MolarMassa);
            this.setValueToName(`${this.prefix}.Koef[${count}]`, this.Substances[count].Koef);
        }

        setValueToName(name, value) {
            document.getElementsByName(name)[0].value = value;
        }

        setProperties() {
            this.Etalon = new Substance(document.getElementsByName(`${this.prefix}.etalon.Name`)[0].value,
                document.getElementsByName(`${this.prefix}.etalon.Massa`)[0].value,
                document.getElementsByName(`${this.prefix}.etalon.MolarMassa`)[0].value,
                document.getElementsByName(`${this.prefix}.etalon.Koef`)[0].value);

            this.RecalcSubstances();
        }

        getJSON() {
            return { Etalon: this.Etalon, Substances: this.Substances };
        }

        getTotalKoef() {
            return (this.Etalon.Massa / this.Etalon.MolarMassa / this.Etalon.Koef);
        }
    }
</script>
