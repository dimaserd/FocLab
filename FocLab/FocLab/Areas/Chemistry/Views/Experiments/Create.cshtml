@using FocLab.Logic.Models.Experiments
@model CreateExperiment
@{
    Layout = ChemistrySettings.LayoutPath;
    ViewBag.Title = "Задание";

    List<SelectListItem> selectData = ViewData["selectData"] as List<SelectListItem>;

    var modelPrefix = "create.";

    var builder = new GenericUserInterfaceModelBuilder<CreateExperiment>(modelPrefix);

    //builder.DropDownListFor(x => x.TaskId, selectData);

    
}


    <div class="form-group m-form__group m--margin-top-10">
        <div class="alert m-alert m-alert--default" role="alert">
            Создание эксперимента к задаче
        </div>
    </div>

    

    <div class="form-group m-form__group">
        @Html.LabelFor(x => x.Title)
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
    </div>

    <div class="form-group m-form__group">
        @Html.LabelFor(x => x.TaskId)
        @Html.DropDownList(nameof(CreateExperiment.TaskId), selectData, new { id = "TasksSelect", @class = "form-control" })
    </div>


<div class="m-portlet__foot m-portlet__foot--fit">
    <div class="m-form__actions m-form__actions">
        <div class="row">
            <div class="col-lg-9">
                <button type="reset" class="btn btn-brand form-action-btn btn-exp-create">Создать</button>
                <button type="reset" onclick="location.href='/Chemistry/Experiments/Index'" class="btn btn-secondary">Отмена</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{

    <script src="~/js/Experiments.min.js"></script>
    
    <script>
        $("#TasksSelect").select2({
            placeholder: "Выберите задачу",

            "language": {
                "noResults": function() {
                    return "Задача не найдена.";
                }
            },
            escapeMarkup: function(markup) {
                return markup;
            }
        });
    </script>
}