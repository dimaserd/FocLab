@using FocLab.Logic
@using FocLab.Logic.Extensions
@using FocLab.Model.Enumerations
@model FocLab.Logic.Models.Experiments.ChemistryTaskExperimentModel
@{

    Layout = ChemistrySettings.LayoutPath;
    ViewBag.Title = "Эксперимент";

    const string viewsChemistry = "~/Areas/Chemistry/Views";

    var isNotAdmin = !User.HasRight(UserRight.Admin) && !User.HasRight(UserRight.SuperAdmin);

    var userId = User.Identity.GetUserId();

    var json = Model.SubstanceCounterJson ?? "";

    var title = string.IsNullOrEmpty(Model.Title) ? "[Без названия]" : Model.Title;

    var types = new[]
    {
        ChemistryTaskDbFileType.File1,
        ChemistryTaskDbFileType.File2,
        ChemistryTaskDbFileType.File3,
        ChemistryTaskDbFileType.File4
    };

    int ToInt(ChemistryTaskDbFileType @enum)
    {
        return (int)@enum;
    }
}


<div>

    <div class="form-group m-form__group m--margin-top-10">
        <div class="alert m-alert m-alert--default" role="alert">
            <h5>
                Эксперимент к задаче <strong><a href="/Chemistry/Tasks/Task/@Model.Task.Id">@Model.Task.Title</a></strong>
            </h5>
        </div>
    </div>

    <div class="form-group m-form__group">
        @Html.LabelFor(x => x.Title)
        @Html.TextBoxFor(x => x.Title, new { @class = "form-control" })
    </div>


</div>



<div style="height:20px">

</div>

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    <strong>Статус файла</strong>
                </th>
                @if (Model.Performer.Id == userId)
                {
                    <th>
                        <strong>Загрузка файла</strong>
                    </th>
                }
                <th>
                    <strong>Действия</strong>
                </th>
            </tr>
        </thead>

        <tbody>
            @foreach (var type in types)
            {

                var file = Model.Files.FirstOrDefault(x => x.Type == type);

                <tr>
                    <td>
                        @if (file == null)
                        {
                            <strong>
                                <span class="text-danger">@type.ToDisplayName() не загружен</span>
                            </strong>
                        }
                        else
                        {
                            <strong>
                                <span class="text-success">@type.ToDisplayName() уже загружен</span>
                            </strong>
                        }
                    </td>

                    @if (Model.Performer.Id == userId)
                    {
                        <td>
                            <input id="@ToInt(type)" type="file" name="@type" />
                        </td>
                    }

                    <td>
                        <div class="row">

                            <div class="col-md-12">
                                @if (file != null && Model.Performer.Id == userId)
                                {

                                    <button class="btn btn-success btn-block" data-file-type="" onclick="LoadOrReloadFileForExperiment('@ToInt(type)')">
                                        Загрузить файл
                                    </button>

                                }
                                else if (Model.Performer.Id == userId)
                                {
                                    <button class="btn btn-success btn-block" style="" onclick="LoadOrReloadFileForExperiment('@ToInt(type)')">
                                        Обновить файл
                                    </button>
                                }

                                @if (file != null)
                                {
                                    <a class="btn btn-primary btn-block" style="margin-top:10px" href="/Files/GetDbFileById/@file.FileId">
                                        Скачать файл
                                    </a>
                                }
                            </div>
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

<div style="height:20px">

</div>

<div class="table-responsive">
    <table class="table table-bordered table-striped">
        <tbody>

            <tr>
                <th colspan="2" class="text-center">
                    <strong>Изображение реакции</strong>
                </th>
            </tr>

            @if (Model.Files.Any(x => x.Type == ChemistryTaskDbFileType.ReactionSchemaImage))
            {
                <tr>
                    <th colspan="2">
                        <img class="img-responsive img-fluid" src="/Files/GetDbFileById?id=@Model.Files.FirstOrDefault(x => x.Type == ChemistryTaskDbFileType.ReactionSchemaImage).FileId&type=Medium" />
                    </th>
                </tr>

            }
            @{
                string btnText = Model.Files.Any(x => x.Type == ChemistryTaskDbFileType.ReactionSchemaImage) ? "Перезагрузить файл реакции" : "Загрузить файл реакции";

                var specType = ChemistryTaskDbFileType.ReactionSchemaImage;
            }
            <tr>
                <th>
                    @if (Model.Performer.Id == userId)
                    {
                        <input type="file" id="@ToInt(specType)" accept="image/*" />
                    }
                </th>

                <th>
                    <button class="btn btn-success" onclick="LoadOrReloadFileForExperiment('@ToInt(specType)')">
                        @btnText
                    </button>

                    @if (Model.Files.Any(x => x.Type == ChemistryTaskDbFileType.ReactionSchemaImage))
                    {
                        <a class="btn btn-primary" href="/Files/GetDbFileById/@Model.Files.FirstOrDefault(x => x.Type == specType).FileId">
                            Скачать изображение реакции
                        </a>
                    }

                </th>
            </tr>

        </tbody>

    </table>
</div>
@*Если там налл то он почему то берет верхний элемент модели*@
@await Html.PartialAsync($"{viewsChemistry}/Tasks/Table.cshtml", model: Model.SubstanceCounter)



<div style="height:20px">

</div>

<div class="table-responsive">
    <table class="table table-hover">
        <tr>
            <th colspan="2" class="">
                <strong>
                    Текст выполнения
                </strong>
            </th>
        </tr>

        <tr>
            <td colspan="2">
                @Html.TextArea("PerformerText", value: Model.PerformerText, htmlAttributes: new { @class = "form-control", style = "height:150px" })
            </td>
        </tr>

        @if (isNotAdmin && userId == Model.Performer.Id || User.HasRight(UserRight.Root))
        {
            <tr>
                <td colspan="2">
                    <div class="btn btn-success btn-block" onclick="UpdateExperiment()">
                        <strong>
                            Обновить данные эксперимента
                        </strong>
                    </div>
                </td>
            </tr>
        }
    </table>
</div>


<div class="m-portlet__foot m-portlet__foot--fit">
    <div class="m-form__actions m-form__actions">
        <div class="row">
            <div class="col-lg-9">
                @if (userId == Model.Performer.Id)
                {

                    <button type="reset" class="btn btn-brand form-action-btn">Обновить</button>
                }
                <button type="reset" onclick="location.href='/Chemistry/Experiments/Index'" class="btn btn-secondary">Отмена</button>
            </div>
        </div>
    </div>
</div>


@section Scripts{


    <script src="~/js/Substance.min.js"></script>
    <script src="~/js/Experiments.min.js"></script>

    <script>

        var substanceObject = @Html.GetJson(Model.SubstanceCounter);

        SubstanceStaticHandlers.substance = new SubstanceCounter(substanceObject);

        ExperimentPageHandlers.ExperimentId = "@Model.Id";

        function LoadOrReloadFileForExperiment(fileType) {

            ExperimentPageHandlers.UpdateFileByType(fileType);

        }


    </script>

    <!--Скрипты связанные с редактированием названия-->

    <script>
        var props = {
            Id: "@Model.Id"
        };

        var experimentWorker = new ExperimentWorker(props);
    </script>

    <script>
        function UpdateTitleClickHandler() {

            let data = {
                Title: document.getElementById("experiment.Title").value
            };

            experimentWorker.UpdateTitle(data);
        }
    </script>
}