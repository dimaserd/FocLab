@using FocLab.Logic
@using FocLab.Logic.Models.Reagents
@model ChemistryReagentModel
@{
    Layout = ChemistrySettings.LayoutPath;

    ViewBag.Title = "Редактирование реагента";

    var interfaceDefinition = ViewData["interfaceDefinition"] as GenerateGenericUserInterfaceModel;
}

<div class="form-group m-form__group m--margin-top-10">
    <div class="alert m-alert m-alert--default" role="alert">
        Редактирование реагента
    </div>
</div>

<div class="m-portlet__foot m-portlet__foot--fit">
    <div class="m-form__actions m-form__actions">
        <div class="row">
            <div class="col-lg-9">
                <button type="reset" class="btn btn-brand form-action-btn btn-reagent-create">Редактировать</button>
                <button type="reset" onclick="location.href='/Chemistry/Reagents/Index'" class="btn btn-secondary">Отмена</button>
            </div>
        </div>
    </div>
</div>

<div style="height:50px">

</div>

<h2>
    Задания выполненные пользователями с данным реагентом <span class="m-badge m-badge--success">@Model.Tasks.Count</span>
</h2>

<div class="table-responsive">
    <table class="table table-hover">
        <thead>
            <tr>
                <th>
                    <strong>Название задания</strong>

                </th>

                <th>
                    <strong>Исполнитель</strong>

                </th>

                <th>
                    <strong>Получено (кг)</strong>

                </th>

                <th>
                    <strong>Сдано (кг)</strong>

                </th>

                <th>
                    <strong>Расход (кг)</strong>

                </th>

            </tr>
        </thead>

        <tbody>
            @foreach (var task in Model.Tasks)
            {
                <tr>
                    <td>
                        <a href="/Chemistry/Tasks/Task/@task.Task.Id">
                            @task.Task.Title
                        </a>

                    </td>

                    <td>
                        <a href="/Admin/Users/Details/@task.Task.PerformerUser.Id">
                            @task.Task.PerformerUser.Name
                        </a>
                    </td>

                    <td>
                        @task.TakenQuantity
                    </td>

                    <td>
                        @task.ReturnedQuantity
                    </td>

                    <td>
                        @(task.TakenQuantity - task.ReturnedQuantity)
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {
    <script>
        $(".btn-reagent-create").on("click", () => {

            const data = TryForm.GetDataForFormByModelPrefix("@interfaceDefinition.Interface.Prefix");

            Requester.SendPostRequestWithAnimation("/Api/Chemistry/Reagents/CreateOrUpdate", data, x => {
                if (x.IsSucceeded) {
                    setTimeout(() => location.href = '/Chemistry/Reagents/Index', 1500);
                }
            });
        })
    </script>
}