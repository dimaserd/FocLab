@using Tms.Logic.Models
@model CalendarMonthViewModel
@{
    ViewBag.Title = "Задания";

    var searchModel = (UserScheduleSearchModel)ViewData["searchModel"];

    var culture = new System.Globalization.CultureInfo("ru-RU");

    string DayOfWeekToString(DayOfWeek x) => culture.DateTimeFormat.DayNames[(int)x];

    const string baseLinkFormat = "/Schedule/Index?MonthShift={0}&UserIds={1}";

    var linkFormat = baseLinkFormat.Replace("{1}", "");

    var isAdmin = User.IsAdmin();
}

<link rel="stylesheet" href="https://use.fontawesome.com/releases/v5.8.1/css/all.css" integrity="sha384-50oBUHEmvpQ+1lW4y57PTFmhCaXp0ML5d60M1M7uH2+nqUivzIebhndOJK28anvf" crossorigin="anonymous">

<link rel="stylesheet" href="~/app_bundles/Tasker.min.css" />

<style>
    .no-margin {
        margin: 0 0 0 0;
    }
</style>


<div>
    <div class="row">
        <div class="col-lg-6 col-md-6 col-12 d-flex justify-content-between" style="padding-bottom: 10px;">
            <select id="usersSelect" class="usersSelect" style="width:100%" name="filter.UserIds" multiple></select>
        </div>

        <div class="col-lg-6 col-md-6 col-12 d-flex justify-content-end">
            <div id="createTaskBtn" class="form-group m-form__group">

            </div>
        </div>
    </div>

    <hr />

    <h4 class="display-4 mb-4 text-center">
        <span class="btn btn-success float-left tms-prev-month-btn">
            <i class="fas fa-angle-left"></i>
        </span>

        @Model.TodayDate.ToString("MMMM") @Model.TodayDate.Year

        <span class="btn btn-success float-right tms-next-month-btn">
            <i class="fas fa-angle-right"></i>
        </span>
    </h4>

    <div class="no-margin row d-none d-sm-flex p-1 bg-dark text-white">
        <h5 class="col-sm p-1 text-center">@DayOfWeekToString(DayOfWeek.Monday)</h5>
        <h5 class="col-sm p-1 text-center">@DayOfWeekToString(DayOfWeek.Tuesday)</h5>
        <h5 class="col-sm p-1 text-center">@DayOfWeekToString(DayOfWeek.Wednesday)</h5>
        <h5 class="col-sm p-1 text-center">@DayOfWeekToString(DayOfWeek.Thursday)</h5>
        <h5 class="col-sm p-1 text-center">@DayOfWeekToString(DayOfWeek.Friday)</h5>
        <h5 class="col-sm p-1 text-center">@DayOfWeekToString(DayOfWeek.Saturday)</h5>
        <h5 class="col-sm p-1 text-center">@DayOfWeekToString(DayOfWeek.Sunday)</h5>
    </div>
    <div class="no-margin row border border-right-0 border-bottom-0">

        @foreach (var dateP in Model.DaysInPrevMonth)
        {

            var dayOfWeek = dateP.DayOfWeek;

            <div class="day col-sm p-2 border border-left-0 border-top-0 text-truncate d-none d-sm-inline-block bg-light text-muted">
                <h5 class="row align-items-center">
                    <span class="date col-1">@dateP.Day</span>
                    <small class="col d-sm-none text-center text-muted">@DayOfWeekToString(dateP.DayOfWeek)</small>
                    <span class="col-1"></span>
                </h5>

                <div>
                    <p class="no-tasks-text d-sm-none">Нет задач</p>
                </div>
            </div>

            if (dayOfWeek == DayOfWeek.Sunday)
            {
                <div class="w-100"></div>
            }
        }

        @if (Model.TodayDate.DayOfWeek == DayOfWeek.Monday && Model.TodayDate.Day == 1)
        {
            <div class="w-100"></div>
        }

        @foreach (var dateP in Model.DaysInThisMonth)
        {

            var dayOfWeek = dateP.DayOfWeek;

            <div class="day col-sm p-2 border border-left-0 border-top-0 text-truncate">
                <h5 class="row align-items-center">
                    <span class="date col-1">@dateP.Day</span>
                    <small class="col d-sm-none text-center text-muted">@DayOfWeekToString(dateP.DayOfWeek)</small>
                    <span class="col-1"></span>
                </h5>

                <div class="m-scrollable m-scrollable--track m-scroller" data-scrollable="true" data-date="@dateP.ToString("dd.MM.yyyy")" data-full-date="@dateP">
                    <p class="no-tasks-text d-sm-none">Нет задач</p>
                </div>
            </div>

            if (dayOfWeek == DayOfWeek.Sunday)
            {
                <div class="w-100"></div>
            }
        }

        @foreach (var dateP in Model.DaysInNextMonth)
        {
            <div class="day col-sm p-2 border border-left-0 border-top-0 text-truncate d-none d-sm-inline-block bg-light text-muted">
                <h5 class="row align-items-center">
                    <span class="date col-1">@dateP.Day</span>
                    <small class="col d-sm-none text-center text-muted">@((DayOfWeekToString(dateP.DayOfWeek)))</small>
                    <span class="col-1"></span>
                </h5>
            </div>
        }

    </div>
</div>

<div style="height:25px">

</div>

<div class="row">
    <div class="col-6">

    </div>

    <div class="col-6">
        <div class="form-group m-form__group">
            <button onclick="location.href='/'" class="btn btn-success float-right">Назад</button>
        </div>
    </div>

</div>

@await Html.PartialAsync("~/Views/Schedule/Partials/Modals.cshtml")



@section Scripts{
    <script src="~/js/Tms.min.js"></script>

    <script>

    var filter = @Html.GetJson(searchModel);

    ScheduleWorker.Constructor(filter);

    var props = {
        Tasks: null,
        User: null,
        SearchModel: filter
    };


    DayTasksWorker.Constructor(props);
    ScheduleStaticHandlers.Filter = filter;

    document.addEventListener("DOMContentLoaded", () => {

        DayTasksWorker.GetTasks();

        $("#usersSelect").select2().on("change", () => { ScheduleStaticHandlers.OnUsersSelectChanged(); });
    });

     $("body").tooltip({ selector: '[data-toggle=tooltip]' });

    </script>

}
