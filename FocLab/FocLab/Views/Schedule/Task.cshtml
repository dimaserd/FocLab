@using Tms.Logic.Models
@model DayTaskModel
@{
    ViewBag.Title = "Редактирование задания";

    var interfaceModel = ViewData["interfaceModel"] as GenerateGenericUserInterfaceModel;
}


<div class="row">
    <div class="col-md-12">
        <a href="/Schedule" class="btn btn-primary">
            <i class="fa fa-list-ol"></i>
            Календарь с заданиями
        </a>

        <a href="/Schedule/Search" class="btn btn-primary">
            <i class="fa fa-list-ol"></i>
            Поиск заданий
        </a>
    </div>
</div>


<div style="height:20px">

</div>


<div class="form-group m-form__group m--margin-top-10">
    <div class="alert m-alert m-alert--default" role="alert">
        Редактирование задания
    </div>
</div>

@await Html.RenderGenericUserInterfaceAsync(interfaceModel)

<div class="m-portlet__foot m-portlet__foot--fit">
    <div class="m-form__actions">
        <button type="reset" class="btn btn-primary action-btn">Редактировать</button>
        <button onclick="location.href='/Schedule'" class="btn btn-secondary">Отмена</button>
    </div>
</div>

@section Scripts{

    <script>
        $(".action-btn").on("click", () => {
            const data = TryForm.GetDataForFormByModelPrefix("@interfaceModel.Interface.Prefix");;

            Requester.SendPostRequestWithAnimation("/Api/DayTask/CreateOrUpdate", data, resp => {
                if (resp.IsSucceeded) {
                    setTimeout(() => { location.reload() }, 1000)
                }
            });
        });
    </script>
}