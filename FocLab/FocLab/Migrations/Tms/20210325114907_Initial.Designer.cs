// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tms.Model;

namespace FocLab.Migrations.Tms
{
    [DbContext(typeof(TmsDbContext))]
    [Migration("20210325114907_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.13");

            modelBuilder.Entity("Tms.Model.Entities.DayTask", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AssigneeUserId")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<int>("CompletionSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<int>("EstimationSeconds")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("FinishDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.Property<int>("Seconds")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaskComment")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("TaskDate")
                        .HasColumnType("date");

                    b.Property<string>("TaskReview")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskTarget")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskText")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskTitle")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("DayTasks");
                });

            modelBuilder.Entity("Tms.Model.Entities.DayTaskComment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("AuthorId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Comment")
                        .HasColumnType("TEXT");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("TEXT");

                    b.Property<string>("DayTaskId")
                        .HasColumnType("TEXT");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastModifiedOn")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("BLOB");

                    b.HasKey("Id");

                    b.HasIndex("DayTaskId");

                    b.ToTable("DayTaskComments");
                });

            modelBuilder.Entity("Tms.Model.Entities.DayTaskComment", b =>
                {
                    b.HasOne("Tms.Model.Entities.DayTask", "DayTask")
                        .WithMany("Comments")
                        .HasForeignKey("DayTaskId");
                });
#pragma warning restore 612, 618
        }
    }
}
