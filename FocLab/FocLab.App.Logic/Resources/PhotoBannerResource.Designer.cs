//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FocLab.App.Logic.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class PhotoBannerResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal PhotoBannerResource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FocLab.App.Logic.Resources.PhotoBannerResource", typeof(PhotoBannerResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Массив идентификаторов файлов не может быть пустым.
        /// </summary>
        public static string ArrayOfFileIdsCantBeEmpty {
            get {
                return ResourceManager.GetString("ArrayOfFileIdsCantBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Колличество файлов в баннере не совпадает с колличеством файлов в модели.
        /// </summary>
        public static string CountOfFilesInBannerIsNotEqualModelsCount {
            get {
                return ResourceManager.GetString("CountOfFilesInBannerIsNotEqualModelsCount", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Баннер создан.
        /// </summary>
        public static string PhotoBannerCreated {
            get {
                return ResourceManager.GetString("PhotoBannerCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Фото удалено из баннера.
        /// </summary>
        public static string PhotoBannerItemDeleted {
            get {
                return ResourceManager.GetString("PhotoBannerItemDeleted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Фото для баннера не найдено по указанному идентификатору.
        /// </summary>
        public static string PhotoBannerItemNotFoundByProvidedFileId {
            get {
                return ResourceManager.GetString("PhotoBannerItemNotFoundByProvidedFileId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Добавлены фотографии для баннеров.
        /// </summary>
        public static string PhotoBannerItemsCreated {
            get {
                return ResourceManager.GetString("PhotoBannerItemsCreated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Фотографии для баннера отсортированы.
        /// </summary>
        public static string PhotoBannerItemsSorted {
            get {
                return ResourceManager.GetString("PhotoBannerItemsSorted", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Название баннера не может быть пустым.
        /// </summary>
        public static string PhotoBannerNameCanNotBeEmpty {
            get {
                return ResourceManager.GetString("PhotoBannerNameCanNotBeEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Баннер не найден по указанному идентификатору.
        /// </summary>
        public static string PhotoBannerNotFoundByProvidedId {
            get {
                return ResourceManager.GetString("PhotoBannerNotFoundByProvidedId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Свойста баннера изменены.
        /// </summary>
        public static string PhotoBannerUpdated {
            get {
                return ResourceManager.GetString("PhotoBannerUpdated", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Баннер с названием &apos;{0}&apos; уже существует.
        /// </summary>
        public static string PhotoBannerWithTheNameAlreadyExistsFormat {
            get {
                return ResourceManager.GetString("PhotoBannerWithTheNameAlreadyExistsFormat", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В баннере уже присутствуют перевязки с принятыми файловыми идентификаторами.
        /// </summary>
        public static string ThereAreFileIdsThatAlreadyExistInPhotoBanner {
            get {
                return ResourceManager.GetString("ThereAreFileIdsThatAlreadyExistInPhotoBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В модели обнаружены файлы, которые не связаны с баннером.
        /// </summary>
        public static string ThereAreFilesInModelThatDoNotExistInBanner {
            get {
                return ResourceManager.GetString("ThereAreFilesInModelThatDoNotExistInBanner", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не все файлы являются изображениями.
        /// </summary>
        public static string ThereAreFilesThatAreNotImages {
            get {
                return ResourceManager.GetString("ThereAreFilesThatAreNotImages", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Не все файлы были найдены по идентификаторам.
        /// </summary>
        public static string ThereFilesThatWereNotFoundByProvidedIds {
            get {
                return ResourceManager.GetString("ThereFilesThatWereNotFoundByProvidedIds", resourceCulture);
            }
        }
    }
}
