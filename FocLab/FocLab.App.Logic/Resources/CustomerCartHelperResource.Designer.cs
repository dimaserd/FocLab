//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FocLab.App.Logic.Resources {
    using System;
    
    
    /// <summary>
    ///   Класс ресурса со строгой типизацией для поиска локализованных строк и т.д.
    /// </summary>
    // Этот класс создан автоматически классом StronglyTypedResourceBuilder
    // с помощью такого средства, как ResGen или Visual Studio.
    // Чтобы добавить или удалить член, измените файл .ResX и снова запустите ResGen
    // с параметром /str или перестройте свой проект VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class CustomerCartHelperResource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal CustomerCartHelperResource() {
        }
        
        /// <summary>
        ///   Возвращает кэшированный экземпляр ResourceManager, использованный этим классом.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("FocLab.App.Logic.Resources.CustomerCartHelperResource", typeof(CustomerCartHelperResource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Перезаписывает свойство CurrentUICulture текущего потока для всех
        ///   обращений к ресурсу с помощью этого класса ресурса со строгой типизацией.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Попытка купить больше товаров, чем имеется в наличии.
        /// </summary>
        public static string AttemptToBuyMoreProductsThanAllowed {
            get {
                return ResourceManager.GetString("AttemptToBuyMoreProductsThanAllowed", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на В корзине нет товаров.
        /// </summary>
        public static string CartHasNoProducts {
            get {
                return ResourceManager.GetString("CartHasNoProducts", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Корзина валидна.
        /// </summary>
        public static string CartIsValid {
            get {
                return ResourceManager.GetString("CartIsValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Корзина не найдена.
        /// </summary>
        public static string CartNotFound {
            get {
                return ResourceManager.GetString("CartNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Идентификатор города в котором находиться станция метро, не совпадает с городом в модели.
        /// </summary>
        public static string CityIdentifierInModelIsNotEqualMetroStationCityIdentifier {
            get {
                return ResourceManager.GetString("CityIdentifierInModelIsNotEqualMetroStationCityIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Город доставки не найден по указанному идентификатору.
        /// </summary>
        public static string CityNotFoundByIdentifier {
            get {
                return ResourceManager.GetString("CityNotFoundByIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Адрес доставки не указан.
        /// </summary>
        public static string DeliverAddressIsNotDefined {
            get {
                return ResourceManager.GetString("DeliverAddressIsNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Город доставки не найден по указанному идентификатору.
        /// </summary>
        public static string DeliveryCityNotFoundByIdentifier {
            get {
                return ResourceManager.GetString("DeliveryCityNotFoundByIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбранный способ доставки недоступен.
        /// </summary>
        public static string DeliveryMethodIsNotAvailable {
            get {
                return ResourceManager.GetString("DeliveryMethodIsNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Способ доставки не найден по указаннному идентификатору.
        /// </summary>
        public static string DeliveryMethodIsNotFoundByIdentifier {
            get {
                return ResourceManager.GetString("DeliveryMethodIsNotFoundByIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Данный способ доставки не является типом доставки до метро.
        /// </summary>
        public static string DeliveryMethodIsNotOfTypeToMetroStation {
            get {
                return ResourceManager.GetString("DeliveryMethodIsNotOfTypeToMetroStation", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Точка самовывоза не найдена по указанному идентификатору.
        /// </summary>
        public static string DistributionPointIsNotFoundByIdentifier {
            get {
                return ResourceManager.GetString("DistributionPointIsNotFoundByIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Станция метро не найдена по указанному идентификатору.
        /// </summary>
        public static string MetroStationNotFoundByIdentifier {
            get {
                return ResourceManager.GetString("MetroStationNotFoundByIdentifier", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Другой город доставки не указан.
        /// </summary>
        public static string OtherCityIsNotProvided {
            get {
                return ResourceManager.GetString("OtherCityIsNotProvided", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Ищет локализованную строку, похожую на Выбранная точка самовывоза недоступна.
        /// </summary>
        public static string SelectedDistributionPointIsNotAvailable {
            get {
                return ResourceManager.GetString("SelectedDistributionPointIsNotAvailable", resourceCulture);
            }
        }
    }
}
